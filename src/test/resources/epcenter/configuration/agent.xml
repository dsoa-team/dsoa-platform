<?xml version="1.0" encoding="UTF-8" ?>
<agents>
	<agent id="AvgResponseTimeAgent">
		<description>Calculates avg response time attribute</description>
		<mapping id="AvgResponseTimeMapping">
			<input-event type="InvocationEvent" alias="event">
				<window type="length" size="10" unit=""/>
			</input-event>
			<output-event type="AvgResponseTimeEvent">
				<metadata>
					<property id="id" expression="event.metadata.id" />
					<property id="timestamp" expression="event.metadata.timestamp" />
					<property id="source" expression="event.metadata.source" />
				</metadata>
				<data>
					<property id="value" type="java.lang.Double"
						expression="avg(event.data.responseTimestamp - event.data.requestTimestamp)" />
				</data>
			</output-event>
		</mapping>
	</agent>

	<agent id="OutOfServiceAgent">
		<description>OutOfServiceAgent identifies request made out of predefined times</description>
		<mapping id="OutOfServiceAgentMapping">
			<input-event type="InvocationEvent" alias="event">
				<window type="length" size="1" unit="" />
				<filterExpression>
					<filter expression="event.data.exceptionClass"  operator="EQ" value="br.com.bb.exception.OutOfScheduleException"/>
				</filterExpression>
			</input-event>
			<output-event type="RequestOutOfScheduleEvent">
				<metadata>
					<property id="id" expression="event.metadata.id" />
					<property id="timestamp" expression="event.metadata.timestamp" />
					<property id="source" expression="event.metadata.source" />
				</metadata>
				<data>
					<property id="value" type="java.lang.Double"
						expression="1" />
				</data>
			</output-event>
		</mapping>
	</agent>
	
	String address, Stock stock, double lowerThreshold,
			double higherThreshold
	
	<agent id="IntrospectSampleAgent">
		<description></description>
		<query id="IntrospectSampleQuery">
			<command>
				 context PartitionedByEventSource 
				 INSERT INTO IntrospectSampleEvent 
				 SELECT 
				 event.metadata_id as metadata_id , 
				 event.metadata_timestamp as metadata_timestamp , 
				 event.metadata_source as metadata_source ,
				 event.data_parameterValues('0') as data_address ,
				 event.data_parameterValues('1') as data_stock ,
				 event.data_parameterValues('2') as data_lowerThreshold ,
				 event.data_parameterValues('3') as data_higherThreshold ,
				 event.data_returnType as data_type , 
				 event.data_returnValue as data_price
				 FROM InvocationEvent as event
			</command>
		</query>
	</agent>
	
	<!-- <agent id="MinResponseTimeAgent">
		<description>Calculates min response time attribute</description>
		<query id="MinResponseTimeQuery">
			<command>
				SELECT min (event.data_responseTimestamp -
				event.data_requestTimestamp) as value
				FROM
				InvocationEvent.win:time(10 sec) as event
			</command>
		</query>
	</agent> -->

	<!-- <event type="DsoaEvent"> <metadata> <property id="id" type="java.lang.String" 
		/> <property id="timestamp" type="java.lang.Double" /> </metadata> </event> 
		<event type="AvgResponseTimeEvent" extends="DsoaEvent"> <data> <property 
		id="value" type="java.lang.Double" /> </data> </event> -->



	<!-- <metric name="ResponseTime" description="Response time from invocation"> 
		<category name=performance"/> <input event="invocationEvent" alias="invocation"/> 
		<output event="avgResponseTime" alias "avgResp"/> <window type="length_batch" 
		size="100" /> <mapping event="ResponseTime"> <property id="id" type="Double" 
		generated="true" /> <property id="timestamp" type="Double" gererated="true" 
		/> <property id="value" statistic="avg" type="Double"> InvocationEvent.response.timestamp 
		- InvocationEvent.request.timestamp </property> </mapping> </metric> -->


	<!-- <agent> <name>AvailabilityAgent</name> <description>Availability attribute</description> 
		<metric>Availability</metric> <transformer type="class"> <query> SELECT InvocationEvent.responseTimestamp 
		- InvocationEvent.requestTimestamp as value FROM InvocationEvent </query> 
		</transformer> </agent> <agent> <name>ResponseTimeAgent</name> <description>Calculates 
		response time attribute</description> <metric>ResponseTime</metric> <transformer 
		type="query"> <query> SELECT InvocationEvent.responseTimestamp - InvocationEvent.requestTimestamp 
		as value FROM InvocationEvent </query> </transformer> </agent> <agent> <name>MeanResponseTimeAgent</name> 
		<description>Calculates mean response time attribute</description> <metric>MeanResponseTime</metric> 
		<transformer type="query"> <query> SELECT avg(InvocationEvent.responseTimestamp 
		- InvocationEvent.requestTimestamp) as value FROM InvocationEvent:win(30s) 
		</query> </transformer> </agent> -->
</agents>

